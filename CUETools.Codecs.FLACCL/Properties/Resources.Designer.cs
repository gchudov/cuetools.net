//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CUETools.Codecs.FLACCL.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CUETools.Codecs.FLACCL.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Allow non-subset modes, which allow for greater compression, but are less compatible.
        /// </summary>
        internal static string AllowNonSubsetDescription {
            get {
                return ResourceManager.GetString("AllowNonSubsetDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Use additional CPU threads.
        /// </summary>
        internal static string DescriptionCPUThreads {
            get {
                return ResourceManager.GetString("DescriptionCPUThreads", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Additional preprocessor definitions for OpenCL kernel.
        /// </summary>
        internal static string DescriptionDefines {
            get {
                return ResourceManager.GetString("DescriptionDefines", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Use CPU or GPU device.
        /// </summary>
        internal static string DescriptionDeviceType {
            get {
                return ResourceManager.GetString("DescriptionDeviceType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Do final encoding stages on GPU (experimental).
        /// </summary>
        internal static string DescriptionDoRice {
            get {
                return ResourceManager.GetString("DescriptionDoRice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Use GPU on all stages.
        /// </summary>
        internal static string DescriptionGPUOnly {
            get {
                return ResourceManager.GetString("DescriptionGPUOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на GPU thread block size (64, 128, 256).
        /// </summary>
        internal static string DescriptionGroupSize {
            get {
                return ResourceManager.GetString("DescriptionGroupSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Device uses host memory (Don&apos;t use).
        /// </summary>
        internal static string DescriptionMappedMemory {
            get {
                return ResourceManager.GetString("DescriptionMappedMemory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Number of bytes to reserve for metadata.
        /// </summary>
        internal static string DescriptionPadding {
            get {
                return ResourceManager.GetString("DescriptionPadding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на OpenCL platform to use.
        /// </summary>
        internal static string DescriptionPlatform {
            get {
                return ResourceManager.GetString("DescriptionPlatform", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Number of frames processed per one multiprocessor.
        /// </summary>
        internal static string DescriptionTaskSize {
            get {
                return ResourceManager.GetString("DescriptionTaskSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Calculate MD5 hash for audio stream.
        /// </summary>
        internal static string DoMD5Description {
            get {
                return ResourceManager.GetString("DoMD5Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Decode each frame and compare with original.
        /// </summary>
        internal static string DoVerifyDescription {
            get {
                return ResourceManager.GetString("DoVerifyDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Samples written differs from the expected sample count.
        /// </summary>
        internal static string ExceptionSampleCount {
            get {
                return ResourceManager.GetString("ExceptionSampleCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Validation failed.
        /// </summary>
        internal static string ExceptionValidationFailed {
            get {
                return ResourceManager.GetString("ExceptionValidationFailed", resourceCulture);
            }
        }
    }
}
