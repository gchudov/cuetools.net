<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnCancel.Text" xml:space="preserve">
    <value>Abbrechen</value>
  </data>
  <data name="checkBoxCheckForUpdates.Text" xml:space="preserve">
    <value>Auf Aktualisierungen prüfen</value>
  </data>
  <data name="checkBoxSeparateDecodingThread.Text" xml:space="preserve">
    <value>In eigenem Thread dekodieren</value>
  </data>
  <data name="checkBoxSeparateDecodingThread.ToolTip" xml:space="preserve">
    <value>Verbessert die Geschwindigkeit auf Mehrkernprozessoren</value>
  </data>
  <data name="labelLanguage.Text" xml:space="preserve">
    <value>Sprache</value>
  </data>
  <data name="comboLanguage.ToolTip" xml:space="preserve">
    <value>Sprache der CUETools-Oberfläche</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="chkOverwriteTags.Text" xml:space="preserve">
    <value>CUE-Daten überschreiben</value>
  </data>
  <data name="checkBoxCopyBasicTags.Text" xml:space="preserve">
    <value>Basistags kopieren</value>
  </data>
  <data name="checkBoxCopyUnknownTags.Text" xml:space="preserve">
    <value>Unbekannte Tags kopieren</value>
  </data>
  <data name="groupBoxAlbumArt.Text" xml:space="preserve">
    <value>Coverbilder</value>
  </data>
  <data name="checkBoxExtractAlbumArt.Text" xml:space="preserve">
    <value>Coverbilder als Folder.jpg extrahieren</value>
  </data>
  <data name="checkBoxCopyAlbumArt.Text" xml:space="preserve">
    <value>Coverbilder kopieren</value>
  </data>
  <data name="checkBoxEmbedAlbumArt.Text" xml:space="preserve">
    <value>Folder.jpg einbetten</value>
  </data>
  <data name="labelAlbumArtMaximumResolution.Text" xml:space="preserve">
    <value>Größe ändern, falls Auflösung &gt;</value>
  </data>
  <data name="chkExtractLog.Text" xml:space="preserve">
    <value>Logdatei extrahieren</value>
  </data>
  <data name="chkAllowMultipleInstances.Text" xml:space="preserve">
    <value>Mehrere Instanzen erlauben</value>
  </data>
  <data name="chkAllowMultipleInstances.ToolTip" xml:space="preserve">
    <value>Ermöglicht das Öffnen mehrerer CUETools-Fenster zur gleichen Zeit.</value>
  </data>
  <data name="chkReducePriority.Text" xml:space="preserve">
    <value>Prozesspriorität auf untätig reduzieren</value>
  </data>
  <data name="chkReducePriority.ToolTip" xml:space="preserve">
    <value>Prozesspriorität reduzieren, indem Leerlaufzeit zum Arbeiten genutzt wird.</value>
  </data>
  <data name="checkBoxCheckForUpdates.ToolTip" xml:space="preserve">
    <value>Beim Start des Programms auf Aktualisierungen prüfen</value>
  </data>
  <data name="chkTruncateExtra4206Samples.Text" xml:space="preserve">
    <value>Nullsamples abschneiden, falls vorhanden</value>
  </data>
  <data name="chkTruncateExtra4206Samples.ToolTip" xml:space="preserve">
    <value>Einige fehlerhafte FLAC-Kodierer fügen am Ende jeder Datei zusätzliche 4608 Nullsamples ein. Sie können automatisch erkannt und entfernt werden.</value>
  </data>
  <data name="chkCreateCUEFileWhenEmbedded.Text" xml:space="preserve">
    <value>Erstelle .cue-Datei auch, wenn eingebettet</value>
  </data>
  <data name="chkCreateCUEFileWhenEmbedded.ToolTip" xml:space="preserve">
    <value>Erstellt auch beim Einbetten in Audiodateien eine separate CUE-Datei.</value>
  </data>
  <data name="chkCreateM3U.Text" xml:space="preserve">
    <value>Erstelle .m3u-Abspiellisten</value>
  </data>
  <data name="chkCreateM3U.ToolTip" xml:space="preserve">
    <value>Erstellt .m3u-Playlistdateien für Einzeltracks.</value>
  </data>
  <data name="chkFillUpCUE.Text" xml:space="preserve">
    <value>Fehlende CUE-Daten mit Tags füllen</value>
  </data>
  <data name="chkEmbedLog.Text" xml:space="preserve">
    <value>Logdatei als "LOG"-Tag einbetten</value>
  </data>
  <data name="chkEmbedLog.ToolTip" xml:space="preserve">
    <value>Die Datei sollte im selben Verzeichnis sein und die Erweiterung .log haben.</value>
  </data>
  <data name="checkBoxWriteCUETags.Text" xml:space="preserve">
    <value>Basistags aus CUE-Datei schreiben</value>
  </data>
  <data name="chkAutoCorrectFilenames.Text" xml:space="preserve">
    <value>Audiodaten suchen, falls fehlend</value>
  </data>
  <data name="chkAutoCorrectFilenames.ToolTip" xml:space="preserve">
    <value>Zuvor Dateinamen korrigieren, wenn Audiodaten nicht gefunden werden können</value>
  </data>
  <data name="grpGeneral.Text" xml:space="preserve">
    <value>Allgemein</value>
  </data>
  <data name="chkWriteArLogOnConvert.Text" xml:space="preserve">
    <value>AccurateRip-Log schreiben</value>
  </data>
  <data name="chkWriteArTagsOnConvert.Text" xml:space="preserve">
    <value>AccurateRip-Tags schreiben</value>
  </data>
  <data name="chkWriteArTagsOnConvert.ToolTip" xml:space="preserve">
    <value>Den Ausgabedateien ACCURATERIPCOUNT/ACCURATERIPCOUNTALLOFFSETS/ACCURATERIPTOTAL-Tags hinzufügen.
Sie können foobar2000 dazu bringen, die Werte anzuzeigen, und sehen, ob Ihre Musik korrekt kopiert wurde oder wie beliebt sie ist.</value>
  </data>
  <data name="checkBoxARVerifyUseSourceFolder.Text" xml:space="preserve">
    <value>In Quellordner</value>
  </data>
  <data name="groupBoxARLog.Text" xml:space="preserve">
    <value>Logdatei</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>% der verif. Tracks &gt;=</value>
  </data>
  <data name="checkBoxFixToNearest.Text" xml:space="preserve">
    <value>zu nächstem</value>
  </data>
  <data name="labelLogFileExtension.Text" xml:space="preserve">
    <value>Erweiterung:</value>
  </data>
  <data name="checkBoxARLogVerbose.Text" xml:space="preserve">
    <value>ausführlich</value>
  </data>
  <data name="labelEncodeWhenConfidence.Text" xml:space="preserve">
    <value>wenn Zuversicht &gt;=</value>
  </data>
  <data name="labelFixWhenConfidence.Text" xml:space="preserve">
    <value>wenn Zuversicht &gt;=</value>
  </data>
  <data name="groupBox1.Text" xml:space="preserve">
    <value>Verifizieren, dann konvertieren</value>
  </data>
  <data name="chkFilenamesANSISafe.Text" xml:space="preserve">
    <value>ANSI-Dateinamen erzwingen</value>
  </data>
  <data name="chkFilenamesANSISafe.ToolTip" xml:space="preserve">
    <value>Zur Kompatibilität mit Nicht-Unicode-Anwendungen nur Zeichen erlauben, die in der ANSI-Codepage vorhanden sind.</value>
  </data>
  <data name="chkWriteARTagsOnVerify.Text" xml:space="preserve">
    <value>AccurateRip-Tags schreiben</value>
  </data>
  <data name="chkWriteARTagsOnVerify.ToolTip" xml:space="preserve">
    <value>Den Eingabedateien ACCURATERIPCOUNT/ACCURATERIPCOUNTALLOFFSETS/ACCURATERIPTOTAL-Tags hinzufügen.
Sie können foobar2000 dazu bringen, die Werte anzuzeigen, und sehen, ob Ihre Musik korrekt kopiert wurde oder wie beliebt sie ist.</value>
  </data>
  <data name="chkHDCDDecode.Text" xml:space="preserve">
    <value>HDCD auf 20 Bit dekodieren</value>
  </data>
  <data name="chkHDCDDecode.ToolTip" xml:space="preserve">
    <value>HDCD-Dekodierung ist nicht umkehrbar. Die resultierenden Dateien können nicht auf CD gebrannt werden. 24-Bit-Audiodateien werden erstellt, aber die eigentliche Bitrate beträgt 20 Bit</value>
  </data>
  <data name="chkHDCDStopLooking.Text" xml:space="preserve">
    <value>Nach 750 Frames abbrechen</value>
  </data>
  <data name="chkHDCDStopLooking.ToolTip" xml:space="preserve">
    <value>Nicht mehr nach HDCD-Informationen suchen, wenn sie in den ersten 10 Sekunden der CD nicht zu finden sind</value>
  </data>
  <data name="chkHDCD24bit.Text" xml:space="preserve">
    <value>Als 24-Bit-"verlustfrei" speichern</value>
  </data>
  <data name="chkHDCD24bit.ToolTip" xml:space="preserve">
    <value>Wenn lossyWAV nicht verwendet wird, für Kompatibilität auf 24 Bit erweitern</value>
  </data>
  <data name="chkHDCDLW16.Text" xml:space="preserve">
    <value>Als 16-Bit-LossyWAV speichern</value>
  </data>
  <data name="chkHDCDLW16.ToolTip" xml:space="preserve">
    <value>Beim Konvertieren in lossyWAV auf 16-Bit beschneiden</value>
  </data>
  <data name="chkKeepOriginalFilenames.Text" xml:space="preserve">
    <value>Originale Dateinamen beibehalten</value>
  </data>
  <data name="chkKeepOriginalFilenames.ToolTip" xml:space="preserve">
    <value>Audiodateien denselben Namen wie im Original-CUE-Sheet geben, falls möglich</value>
  </data>
  <data name="chkRemoveSpecial.Text" xml:space="preserve">
    <value>Sonderzeichen entfernen außer:</value>
  </data>
  <data name="chkReplaceSpaces.Text" xml:space="preserve">
    <value>Leerzeichen durch Unterstriche ersetzen</value>
  </data>
  <data name="txtTrackFilenameFormat.ToolTip" xml:space="preserve">
    <value>Vorlage für den Namen der Audiodateien bei Datei-pro-Track-Images</value>
  </data>
  <data name="lblTrackFilenameFormat.Text" xml:space="preserve">
    <value>Trackformat:</value>
  </data>
  <data name="lblSingleFilenameFormat.Text" xml:space="preserve">
    <value>Einzelformat:</value>
  </data>
  <data name="txtSingleFilenameFormat.ToolTip" xml:space="preserve">
    <value>Vorlage für den Namen der Audiodateien bei Einzeldatei-Images</value>
  </data>
  <data name="grpAudioFilenames.Text" xml:space="preserve">
    <value>Audio-Dateinamen</value>
  </data>
  <data name="groupBoxGaps.Text" xml:space="preserve">
    <value>Lücken</value>
  </data>
  <data name="tabPage1.Text" xml:space="preserve">
    <value>CUETools</value>
  </data>
  <data name="rbGapsPlusHTOA.Text" xml:space="preserve">
    <value>Lücken &amp;angehängt + HTOA</value>
  </data>
  <data name="rbGapsPlusHTOA.ToolTip" xml:space="preserve">
    <value>Lücken werden an das vorige Stück angehängt. Die HTOA (Hidden Track One Audio, d.h. die Lücke vor dem ersten Stück) wird in einer separaten Datei gespeichert.</value>
  </data>
  <data name="rbGapsAppended.Text" xml:space="preserve">
    <value>Lücken angehängt</value>
  </data>
  <data name="rbGapsAppended.ToolTip" xml:space="preserve">
    <value>Lücken werden an das vorige Stück angehängt. Die HTOA wird nicht gespeichert.</value>
  </data>
  <data name="rbGapsPrepended.Text" xml:space="preserve">
    <value>Lücken vorangestellt</value>
  </data>
  <data name="rbGapsPrepended.ToolTip" xml:space="preserve">
    <value>Lücken werden vor das nächste Stück gestellt.</value>
  </data>
  <data name="rbGapsLeftOut.Text" xml:space="preserve">
    <value>Lücken ausgelassen</value>
  </data>
  <data name="rbGapsLeftOut.ToolTip" xml:space="preserve">
    <value>Lücken werden ausgelassen und durch Stille ersetzt.</value>
  </data>
  <data name="chkWriteARLogOnVerify.Text" xml:space="preserve">
    <value>AccurateRip-Log schreiben</value>
  </data>
  <data name="groupBoxVerify.Text" xml:space="preserve">
    <value>Verifizieren</value>
  </data>
  <data name="tabPage6.Text" xml:space="preserve">
    <value>Taggen</value>
  </data>
  <data name="tabPage7.Text" xml:space="preserve">
    <value>Erweitert</value>
  </data>
  <data name="groupBox5.Text" xml:space="preserve">
    <value>Kodieren, falls verifiziert</value>
  </data>
  <data name="groupBox4.Text" xml:space="preserve">
    <value>Offset korrigieren</value>
  </data>
  <data name="tabPage3.Text" xml:space="preserve">
    <value>Formate</value>
  </data>
  <data name="labelFormatLosslessEncoder.Text" xml:space="preserve">
    <value>Encoder (verlustfrei)</value>
  </data>
  <data name="labelFormatLossyEncoder.Text" xml:space="preserve">
    <value>Encoder (verlustbehaftet)</value>
  </data>
  <data name="checkBoxFormatAllowLossy.Text" xml:space="preserve">
    <value>Unterstützt verlustbehaftete Codierung</value>
  </data>
  <data name="checkBoxFormatAllowLossless.Text" xml:space="preserve">
    <value>Unterstützt verlustfreie Codierung</value>
  </data>
  <data name="checkBoxFormatEmbedCUESheet.Text" xml:space="preserve">
    <value>Unterstützt eingebettete CUE-Sheets</value>
  </data>
  <data name="labelEncoderExtension.Text" xml:space="preserve">
    <value>Erweiterung</value>
  </data>
  <data name="groupBoxExternalEncoder.Text" xml:space="preserve">
    <value>Externer Encoder</value>
  </data>
  <data name="labelEncoderModes.Text" xml:space="preserve">
    <value>Modi</value>
  </data>
  <data name="labelEncoderPath.Text" xml:space="preserve">
    <value>Pfad</value>
  </data>
  <data name="labelEncoderParameters.Text" xml:space="preserve">
    <value>Parameter</value>
  </data>
  <data name="checkBoxEncoderLossless.Text" xml:space="preserve">
    <value>Verlustfrei</value>
  </data>
  <data name="textBoxEncoderPath.ToolTip" xml:space="preserve">
    <value>Pfad zu externer ausführbarer Datei des Encoders</value>
  </data>
  <data name="textBoxEncoderParameters.ToolTip" xml:space="preserve">
    <value>Parameter für den Encoder</value>
  </data>
  <data name="textBoxEncoderName.ToolTip" xml:space="preserve">
    <value>Name des Encoders</value>
  </data>
  <data name="tabPage11.Text" xml:space="preserve">
    <value>Decoder</value>
  </data>
  <data name="labelDecoderExtension.Text" xml:space="preserve">
    <value>Erweiterung</value>
  </data>
  <data name="groupBoxExternalDecoder.Text" xml:space="preserve">
    <value>Externer Decoder</value>
  </data>
  <data name="labelDecoderPath.Text" xml:space="preserve">
    <value>Pfad</value>
  </data>
  <data name="labelDecoderParameters.Text" xml:space="preserve">
    <value>Parameter</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>% der verif. Tracks &gt;=</value>
  </data>
  <data name="grpHDCD.Text" xml:space="preserve">
    <value>HDCD-Optionen</value>
  </data>
  <data name="chkHDCDDetect.Text" xml:space="preserve">
    <value>HDCD-Kodierung erkennen</value>
  </data>
  <data name="checkBox1.Text" xml:space="preserve">
    <value>Verifizieren</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Erweiterte Einstellungen</value>
  </data>
  <data name="btnOK.Text" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="checkBoxEncoderLossless.ToolTip" xml:space="preserve">
    <value>Legt fest, ob es sich um einen verlustfreien Encoder handelt</value>
  </data>
  <data name="label4.Text" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="labelEncoderName.Text" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="labelFormatDecoder.Text" xml:space="preserve">
    <value>Decoder</value>
  </data>
  <data name="labelFormatDefaultDecoder.Text" xml:space="preserve">
    <value>Decoder</value>
  </data>
  <data name="labelFormatEncoder.Text" xml:space="preserve">
    <value>Encoder</value>
  </data>
  <data name="labelFormatTagger.Text" xml:space="preserve">
    <value>Tagger</value>
  </data>
  <data name="tabPage2.Text" xml:space="preserve">
    <value>AccurateRip</value>
  </data>
  <data name="tabPage4.Text" xml:space="preserve">
    <value>HDCD</value>
  </data>
  <data name="textBoxDecoderName.ToolTip" xml:space="preserve">
    <value>Name des Decoders</value>
  </data>
  <data name="textBoxEncoderModes.ToolTip" xml:space="preserve">
    <value>Unterstützte Modi, getrennt durch Leerzeichen</value>
  </data>
  <data name="tabPageEncoders.Text" xml:space="preserve">
    <value>Encoder</value>
  </data>
</root>